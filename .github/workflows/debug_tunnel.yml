name: Debug Cloudflare Tunnel

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to debug'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  debug-tunnel:
    name: Debug Cloudflare Tunnel Configuration
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Install jq
        run: sudo apt-get install jq
      
      - name: Verify API Token
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API }}
        run: |
          echo "Verifying API token permissions..."
          RESPONSE=$(curl -s -X GET "https://api.cloudflare.com/client/v4/user/tokens/verify" \
            -H "Authorization: Bearer ${CLOUDFLARE_API_TOKEN}")
          
          echo "Token verification response:"
          echo $RESPONSE | jq '.'
          
          if echo $RESPONSE | jq -e '.success == true' > /dev/null; then
            echo "✅ Token is valid"
          else
            echo "❌ Token verification failed"
            exit 1
          fi

      - name: Check Tunnel Status
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API }}
          CLOUDFLARE_ACCOUNT: ${{ secrets.CLOUDFLARE_ACCOUNT }}
          TUNNEL_ID: ${{ secrets.CLOUDFLARE_TUNNEL_ID }}
        run: |
          echo "Checking tunnel status..."
          echo "Account ID: ${CLOUDFLARE_ACCOUNT}"
          echo "Tunnel ID: ${TUNNEL_ID}"
          
          TUNNEL_RESPONSE=$(curl -s -X GET \
            "https://api.cloudflare.com/client/v4/accounts/${CLOUDFLARE_ACCOUNT}/cfd_tunnel/${TUNNEL_ID}" \
            -H "Authorization: Bearer ${CLOUDFLARE_API_TOKEN}")
          
          echo "Tunnel status response:"
          echo $TUNNEL_RESPONSE | jq '.'

      - name: Get Current Configuration
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API }}
          CLOUDFLARE_ACCOUNT: ${{ secrets.CLOUDFLARE_ACCOUNT }}
          TUNNEL_ID: ${{ secrets.CLOUDFLARE_TUNNEL_ID }}
        run: |
          echo "Getting current tunnel configuration..."
          
          CONFIG_RESPONSE=$(curl -s -X GET \
            "https://api.cloudflare.com/client/v4/accounts/${CLOUDFLARE_ACCOUNT}/cfd_tunnel/${TUNNEL_ID}/configurations" \
            -H "Authorization: Bearer ${CLOUDFLARE_API_TOKEN}")
          
          echo "Current configuration:"
          echo $CONFIG_RESPONSE | jq '.'

      - name: Update Tunnel Configuration
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API }}
          CLOUDFLARE_ACCOUNT: ${{ secrets.CLOUDFLARE_ACCOUNT }}
          TUNNEL_ID: ${{ secrets.CLOUDFLARE_TUNNEL_ID }}
        run: |
          echo "Getting Modal URL for environment..."
          MODAL_URL="https://chuckfinca--llm-server-${{ github.event.inputs.environment }}-fastapi-app.modal.run"
          echo "Using Modal URL: ${MODAL_URL}"
          
          echo "Updating tunnel configuration..."
          TUNNEL_CONFIG='{
            "config": {
              "ingress": [
                {
                  "hostname": "api.appsimple.io",
                  "service": "'"${MODAL_URL}"'"
                },
                {
                  "service": "http_status:404"
                }
              ]
            }
          }'
          
          echo "Using configuration:"
          echo $TUNNEL_CONFIG | jq '.'
          
          UPDATE_RESPONSE=$(curl -v -X PUT \
            "https://api.cloudflare.com/client/v4/accounts/${CLOUDFLARE_ACCOUNT}/cfd_tunnel/${TUNNEL_ID}/configurations" \
            -H "Authorization: Bearer ${CLOUDFLARE_API_TOKEN}" \
            -H "Content-Type: application/json" \
            --data "$TUNNEL_CONFIG")
          
          echo "Update response:"
          echo $UPDATE_RESPONSE | jq '.'
          
          if echo $UPDATE_RESPONSE | jq -e '.success == true' > /dev/null; then
            echo "✅ Configuration update successful"
          else
            echo "❌ Configuration update failed"
            exit 1
          fi