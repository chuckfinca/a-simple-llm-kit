name: Deploy to Modal

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  deploy:
    name: Deploy to ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Deploy to Modal
        env:
          MODAL_TOKEN_ID: ${{ secrets.MODAL_TOKEN_ID }}
          MODAL_TOKEN_SECRET: ${{ secrets.MODAL_TOKEN_SECRET }}
          ENVIRONMENT: ${{ github.event.inputs.environment }}
        run: |
          python modal_deploy.py --name llm-server-$ENVIRONMENT
      
      - name: Update Cloudflare Tunnel
        if: success()
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API }}
          CLOUDFLARE_ACCOUNT: ${{ secrets.CLOUDFLARE_ACCOUNT }}
          TUNNEL_ID: ${{ secrets.CLOUDFLARE_TUNNEL_ID }}
        run: |
          TUNNEL_CONFIG='{
            "config": {
              "ingress": [
                {
                  "hostname": "api.appsimple.io",
                  "service": "https://chuckfinca--llm-server-${{ github.event.inputs.environment }}-fastapi-app.modal.run"
                },
                {
                  "service": "http_status:404"
                }
              ]
            }
          }'
          
          echo "Using configuration:"
          echo $TUNNEL_CONFIG | jq '.'
          
          UPDATE_RESPONSE=$(curl -v -X PUT \
            "https://api.cloudflare.com/client/v4/accounts/${CLOUDFLARE_ACCOUNT}/cfd_tunnel/${TUNNEL_ID}/configurations" \
            -H "Authorization: Bearer ${CLOUDFLARE_API_TOKEN}" \
            -H "Content-Type: application/json" \
            --data "$TUNNEL_CONFIG")
          
          echo "Update response:"
          echo $UPDATE_RESPONSE | jq '.'
          
          if echo $UPDATE_RESPONSE | jq -e '.success == true' > /dev/null; then
            echo "✅ Configuration update successful"
          else
            echo "❌ Configuration update failed"
            exit 1
          fi